name: Larinfo
on: [push, pull_request]
jobs:
  ubuntu-laravel-9:
    name: Laravel ${{ matrix.laravel-versions }} PHP ${{ matrix.php-versions }} ${{ matrix.operating-system }}
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.0']
        laravel-versions: ['^9.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Check PHP Version and Modules
        run: php -v && php -m
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-
      - name: Install Laravel
        run: composer require "laravel/framework:${{ matrix.laravel-versions }}" --prefer-dist --no-progress
      - name: Update Composer dependencies
        run: composer update --prefer-dist --no-progress --no-suggest --optimize-autoloader
      - name: Run Unit Tests
        run: vendor/bin/phpunit --group unit
      - name: Run Ubuntu Tests
        run: vendor/bin/phpunit --group ubuntu
      - name: Run Larinfo Command
        run: php vendor/bin/testbench larinfo
  macos-laravel-9:
    name: Laravel ${{ matrix.laravel-versions }} PHP ${{ matrix.php-versions }} ${{ matrix.operating-system }}
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [macos-10.15]
        php-versions: ['8.0']
        laravel-versions: ['^9.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Check PHP Version and Modules
        run: php -v && php -m
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-
      - name: Install Laravel
        run: composer require "laravel/framework:${{ matrix.laravel-versions }}" --prefer-dist --no-progress
      - name: Update Composer dependencies
        run: composer update --prefer-dist --no-progress --no-suggest --optimize-autoloader
      - name: Run Unit Tests
        run: vendor/bin/phpunit --group unit
      - name: Run MacOS Tests
        run: vendor/bin/phpunit --group macos
      - name: Run Larinfo Command
        run: php vendor/bin/testbench larinfo
  windows-laravel-9:
    name: Laravel ${{ matrix.laravel-versions }} PHP ${{ matrix.php-versions }} ${{ matrix.operating-system }} without com_dotnet
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [windows-2019]
        php-versions: ['8.0']
        laravel-versions: ['^9.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo_sqlite,sqlite3
      - name: Check PHP Version and Modules
        run: php -v && php -m
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-
      - name: Install Laravel
        run: composer require "laravel/framework:${{ matrix.laravel-versions }}" --prefer-dist --no-progress --ignore-platform-reqs
      - name: Update Composer dependencies
        run: composer update --prefer-dist --no-progress --no-suggest --optimize-autoloader --ignore-platform-reqs
      - name: Run Unit Tests
        run: vendor/bin/phpunit --group unit
      - name: Run Windows Tests
        run: vendor/bin/phpunit --group windows
      - name: Run Larinfo Command
        run: php vendor/bin/testbench larinfo
  windows-with-com-dotnet-laravel-9:
    name: Laravel ${{ matrix.laravel-versions }} PHP ${{ matrix.php-versions }} ${{ matrix.operating-system }} with com_dotnet
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [windows-2019]
        php-versions: ['8.0']
        laravel-versions: ['^9.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo_sqlite,sqlite3,com_dotnet
      - name: Check PHP Version and Modules
        run: php -v && php -m
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.operating-system }}-php-${{ matrix.php-versions }}-laravel-${{ matrix.laravel-versions }}-
      - name: Install Laravel
        run: composer require "laravel/framework:${{ matrix.laravel-versions }}" --prefer-dist --no-progress --ignore-platform-reqs
      - name: Update Composer dependencies
        run: composer update --prefer-dist --no-progress --no-suggest --optimize-autoloader --ignore-platform-reqs
      - name: Run Unit Tests
        run: vendor/bin/phpunit --group unit
      - name: Run Windows Tests
        run: vendor/bin/phpunit --group windows
      - name: Run Larinfo Command
        run: php vendor/bin/testbench larinfo
